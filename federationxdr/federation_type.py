# Generated by xdrgen.py from ../xdr/federation.x on Sat Feb 17 16:20:32 2018
from . import federation_const as const
class PublicKey:
    # XDR definition:
    # union PublicKey switch(PublicKeyType type) {
    #     case PUBLIC_KEY_TYPE_ED25519:
    #         uint256 ed25519;
    # };
    def __init__(self, type=None, ed25519=None):
        self.type = type
        self.ed25519 = ed25519

    switch = property(lambda s: {const.PUBLIC_KEY_TYPE_ED25519:s.ed25519,}[s.type])

    def __getattr__(self, attr):
        return getattr(self.switch, attr)

    def __repr__(self):
        out = []
        if self.type is not None:
            out += ['type=%s' % const.PublicKeyType.get(self.type, self.type)]
        if self.ed25519 is not None:
            out += ['ed25519=%s' % repr(self.ed25519)]
        return 'PublicKey(%s)' % ', '.join(out)
    __str__ = __repr__

AccountID = PublicKey
class Memo:
    # XDR definition:
    # union Memo switch(MemoType type) {
    #     case MEMO_NONE:
    #         void;
    #     case MEMO_TEXT:
    #         string text<28>;
    #     case MEMO_ID:
    #         uint64 id;
    #     case MEMO_HASH:
    #         Hash hash;
    #     case MEMO_RETURN:
    #         Hash retHash;
    # };
    def __init__(self, type=None, text=None, id=None, hash=None, retHash=None):
        self.type = type
        self.text = text
        self.id = id
        self.hash = hash
        self.retHash = retHash

    switch = property(lambda s: {const.MEMO_NONE:None,const.MEMO_TEXT:s.text,const.MEMO_ID:s.id,const.MEMO_HASH:s.hash,const.MEMO_RETURN:s.retHash,}[s.type])

    def __getattr__(self, attr):
        return getattr(self.switch, attr)

    def __repr__(self):
        out = []
        if self.type is not None:
            out += ['type=%s' % const.MemoType.get(self.type, self.type)]
        if self.text is not None:
            out += ['text=%s' % repr(self.text)]
        if self.id is not None:
            out += ['id=%s' % repr(self.id)]
        if self.hash is not None:
            out += ['hash=%s' % repr(self.hash)]
        if self.retHash is not None:
            out += ['retHash=%s' % repr(self.retHash)]
        return 'Memo(%s)' % ', '.join(out)
    __str__ = __repr__

class FederationResponse:
    # XDR definition:
    # struct FederationResponse {
    #     string64 stellarAddress;
    #     AccountID accountID;
    #     Memo memo;
    #     union switch(int v) {
    #         case 0:
    #             void;
    #     } ext;
    # };
    def __init__(self, stellarAddress=None, accountID=None, memo=None, ext=None):
        self.stellarAddress = stellarAddress
        self.accountID = accountID
        self.memo = memo
        self.ext = ext

    def __repr__(self):
        out = []
        if self.stellarAddress is not None:
            out += ['stellarAddress=%s' % repr(self.stellarAddress)]
        if self.accountID is not None:
            out += ['accountID=%s' % repr(self.accountID)]
        if self.memo is not None:
            out += ['memo=%s' % repr(self.memo)]
        if self.ext is not None:
            out += ['ext=%s' % repr(self.ext)]
        return 'FederationResponse(%s)' % ', '.join(out)
    __str__ = __repr__

